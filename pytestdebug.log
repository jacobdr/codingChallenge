versions pytest-2.7.1, py-1.4.27, python-2.7.10.final.0
cwd=/Users/Jacob/Documents/Projects/DataInsight/codingChallenge
args=['--debug']

  pytest_cmdline_main [hook]
      config: <_pytest.config.Config object at 0x1005dfb10>
    pytest_plugin_registered [hook]
        manager: <_pytest.config.PytestPluginManager object at 0x1005df7d0>
        plugin: <Session 'codingChallenge'>
    finish pytest_plugin_registered --> [] [hook]
    pytest_configure [hook]
        config: <_pytest.config.Config object at 0x1005dfb10>
    configured with mode set to 'rewrite' [assertion]
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x1005df7d0>
          plugin: <_pytest.terminal.TerminalReporter instance at 0x103e8de18>
      finish pytest_plugin_registered --> [] [hook]
    finish pytest_configure --> [] [hook]
    pytest_sessionstart [hook]
        session: <Session 'codingChallenge'>
      pytest_plugin_registered [hook]
          manager: <_pytest.config.PytestPluginManager object at 0x1005df7d0>
          plugin: <_pytest.python.FixtureManager instance at 0x103e22e60>
      finish pytest_plugin_registered --> [] [hook]
      pytest_report_header [hook]
          startdir: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge
          config: <_pytest.config.Config object at 0x1005dfb10>
      finish pytest_report_header --> [['rootdir: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge, inifile: setup.cfg'], ['using: pytest-2.7.1 pylib-1.4.27']] [hook]
    finish pytest_sessionstart --> [] [hook]
    pytest_collection [hook]
        session: <Session 'codingChallenge'>
    perform_collect <Session 'codingChallenge'> ['/Users/Jacob/Documents/Projects/DataInsight/codingChallenge'] [collection]
        pytest_collectstart [hook]
            collector: <Session 'codingChallenge'>
        finish pytest_collectstart --> [] [hook]
        pytest_make_collect_report [hook]
            collector: <Session 'codingChallenge'>
        processing argument /Users/Jacob/Documents/Projects/DataInsight/codingChallenge [collection]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/.git
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/.ipynb_checkpoints
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/.ipynb_checkpoints
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/docs
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/docs
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/tweet_input
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/tweet_input
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/tweet_output
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/tweet_output
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/venv
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/.gitignore
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/.gitignore
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/README.md
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/README.md
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/pytestdebug.log
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/pytestdebug.log
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/requirements.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/requirements.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/run.sh
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/run.sh
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/setup.cfg
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/setup.cfg
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/setup.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/setup.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/__init__.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/__init__.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/__init__.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/__init__.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/constants.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/constants.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/constants.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/constants.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/dispatcher.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/median_unique.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/unique_words.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/unique_words.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/unique_words.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/unique_words.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/utils.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/utils.py
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/utils.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/utils.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/dispatcher-checkpoint.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/dispatcher-checkpoint.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/median_unique-checkpoint.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/median_unique-checkpoint.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/test_unique_notebook-checkpoint.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/.ipynb_checkpoints/test_unique_notebook-checkpoint.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/.ipynb_checkpoints
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/.ipynb_checkpoints
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py
                parent: <Session 'codingChallenge'>
              pytest_pycollect_makemodule [hook]
                  path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py
                  parent: <Session 'codingChallenge'>
              finish pytest_pycollect_makemodule --> <Module 'codingChallenge/tests/test_suite.py'> [hook]
            finish pytest_collect_file --> [<Module 'codingChallenge/tests/test_suite.py'>] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_unique_notebook.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_unique_notebook.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_unique_words.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_unique_words.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/.ipynb_checkpoints/test_unique_notebook-checkpoint.ipynb
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/.ipynb_checkpoints/test_unique_notebook-checkpoint.ipynb
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_suite.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_suite.cpython-27-PYTEST.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_third_time.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_third_time.cpython-27-PYTEST.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_unique_words.cpython-27-PYTEST.pyc
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_unique_words.cpython-27-PYTEST.pyc
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_input
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_input
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_directory [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output
                parent: <Session 'codingChallenge'>
            finish pytest_collect_directory --> None [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/ft1_expected_results_v1.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/ft1_expected_results_v1.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp/ft1.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp/ft1.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp/ft2.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tmp/ft2.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_input/tweets.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_input/tweets.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output/ft1.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output/ft1.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output/ft2.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/fixtures/tweet_output/ft2.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/PKG-INFO
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/PKG-INFO
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/SOURCES.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/SOURCES.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/dependency_links.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/dependency_links.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
            pytest_ignore_collect [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/top_level.txt
                config: <_pytest.config.Config object at 0x1005dfb10>
            finish pytest_ignore_collect --> False [hook]
            pytest_collect_file [hook]
                path: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge.egg-info/top_level.txt
                parent: <Session 'codingChallenge'>
            finish pytest_collect_file --> [] [hook]
        finish pytest_make_collect_report --> <CollectReport '' lenresult=1 outcome='passed'> [hook]
        pytest_collectreport [hook]
            report: <CollectReport '' lenresult=1 outcome='passed'>
        finish pytest_collectreport --> [] [hook]
    genitems <Module 'codingChallenge/tests/test_suite.py'> [collection]
      pytest_collectstart [hook]
          collector: <Module 'codingChallenge/tests/test_suite.py'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <Module 'codingChallenge/tests/test_suite.py'>
      find_module called for: test_suite [assertion]
      matched test file '/Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py' [assertion]
      found cached rewritten pyc for '/Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py' [assertion]
      find_module called for: unittest [assertion]
      find_module called for: unittest.result [assertion]
      find_module called for: unittest.os [assertion]
      find_module called for: unittest.sys [assertion]
      find_module called for: unittest.traceback [assertion]
      find_module called for: unittest.StringIO [assertion]
      find_module called for: StringIO [assertion]
      find_module called for: unittest.util [assertion]
      find_module called for: unittest.collections [assertion]
      find_module called for: unittest.functools [assertion]
      find_module called for: unittest.case [assertion]
      find_module called for: unittest.difflib [assertion]
      find_module called for: difflib [assertion]
      find_module called for: unittest.pprint [assertion]
      find_module called for: unittest.re [assertion]
      find_module called for: unittest.types [assertion]
      find_module called for: unittest.warnings [assertion]
      find_module called for: unittest.suite [assertion]
      find_module called for: unittest.loader [assertion]
      find_module called for: unittest.fnmatch [assertion]
      find_module called for: unittest.main [assertion]
      find_module called for: unittest.runner [assertion]
      find_module called for: unittest.time [assertion]
      find_module called for: unittest.signals [assertion]
      find_module called for: unittest.signal [assertion]
      find_module called for: unittest.weakref [assertion]
      find_module called for: filecmp [assertion]
      find_module called for: codingChallenge [assertion]
      find_module called for: codingChallenge.unique_words [assertion]
      find_module called for: codingChallenge.collections [assertion]
      find_module called for: codingChallenge.operator [assertion]
      find_module called for: codingChallenge.codingChallenge [assertion]
      find_module called for: codingChallenge.utils [assertion]
      find_module called for: codingChallenge.median_unique [assertion]
      find_module called for: codingChallenge.constants [assertion]
      find_module called for: codingChallenge.os [assertion]
      find_module called for: codingChallenge.dispatcher [assertion]
      find_module called for: codingChallenge.csv [assertion]
      find_module called for: csv [assertion]
      find_module called for: _csv [assertion]
        pytest_pycollect_makeitem [hook]
            obj: <module 'filecmp' from '/Users/Jacob/anaconda/lib/python2.7/filecmp.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: filecmp
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'collections.OrderedDict'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: OrderedDict
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'unittest' from '/Users/Jacob/anaconda/lib/python2.7/unittest/__init__.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: unittest
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'test_suite.TestUniqueWords'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: TestUniqueWords
        finish pytest_pycollect_makeitem --> <UnitTestCase 'TestUniqueWords'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'shutil' from '/Users/Jacob/anaconda/lib/python2.7/shutil.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: shutil
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function insight_github_unique_word_results at 0x103f26e60>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: insight_github_unique_word_results
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function sessiondir at 0x103f2acf8>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: sessiondir
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <_pytest.assertion.rewrite.AssertionRewritingHook object at 0x103e77910>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __loader__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'pytest' from '/Users/Jacob/anaconda/lib/python2.7/site-packages/pytest.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: pytest
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function original_three_tweets at 0x103f26938>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: original_three_tweets
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'codingChallenge.dispatcher.Dispatcher'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: Dispatcher
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <function run_dispathcer at 0x103f2ad70>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: run_dispathcer
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: {'bytearray': <type 'bytearray'>, 'IndexError': <type 'exceptions.IndexError'>, 'all': <built-in function all>, 'help': Type help() for interactive help, or help(object) for help about object., 'vars': <built-in function vars>, 'SyntaxError': <type 'exceptions.SyntaxError'>, 'unicode': <type 'unicode'>, 'UnicodeDecodeError': <type 'exceptions.UnicodeDecodeError'>, 'memoryview': <type 'memoryview'>, 'isinstance': <built-in function isinstance>, 'copyright': Copyright (c) 2001-2015 Python Software Foundation.
All Rights Reserved.

Copyright (c) 2000 BeOpen.com.
All Rights Reserved.

Copyright (c) 1995-2001 Corporation for National Research Initiatives.
All Rights Reserved.

Copyright (c) 1991-1995 Stichting Mathematisch Centrum, Amsterdam.
All Rights Reserved., 'NameError': <type 'exceptions.NameError'>, 'BytesWarning': <type 'exceptions.BytesWarning'>, 'dict': <type 'dict'>, 'input': <built-in function input>, 'oct': <built-in function oct>, 'bin': <built-in function bin>, 'SystemExit': <type 'exceptions.SystemExit'>, 'StandardError': <type 'exceptions.StandardError'>, 'format': <built-in function format>, 'repr': <built-in function repr>, 'sorted': <built-in function sorted>, 'False': False, 'RuntimeWarning': <type 'exceptions.RuntimeWarning'>, 'list': <type 'list'>, 'iter': <built-in function iter>, 'reload': <built-in function reload>, 'Warning': <type 'exceptions.Warning'>, '__package__': None, 'round': <built-in function round>, 'dir': <built-in function dir>, 'cmp': <built-in function cmp>, 'set': <type 'set'>, 'bytes': <type 'str'>, 'reduce': <built-in function reduce>, 'intern': <built-in function intern>, 'issubclass': <built-in function issubclass>, 'Ellipsis': Ellipsis, 'EOFError': <type 'exceptions.EOFError'>, 'locals': <built-in function locals>, 'BufferError': <type 'exceptions.BufferError'>, 'slice': <type 'slice'>, 'FloatingPointError': <type 'exceptions.FloatingPointError'>, 'sum': <built-in function sum>, 'getattr': <built-in function getattr>, 'abs': <built-in function abs>, 'exit': Use exit() or Ctrl-D (i.e. EOF) to exit, 'print': <built-in function print>, 'True': True, 'FutureWarning': <type 'exceptions.FutureWarning'>, 'ImportWarning': <type 'exceptions.ImportWarning'>, 'None': None, 'hash': <built-in function hash>, 'ReferenceError': <type 'exceptions.ReferenceError'>, 'len': <built-in function len>, 'credits':     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation and a cast of thousands
    for supporting Python development.  See www.python.org for more information., 'frozenset': <type 'frozenset'>, '__name__': '__builtin__', 'ord': <built-in function ord>, 'super': <type 'super'>, 'TypeError': <type 'exceptions.TypeError'>, 'license': Type license() to see the full license text, 'KeyboardInterrupt': <type 'exceptions.KeyboardInterrupt'>, 'UserWarning': <type 'exceptions.UserWarning'>, 'filter': <built-in function filter>, 'range': <built-in function range>, 'staticmethod': <type 'staticmethod'>, 'SystemError': <type 'exceptions.SystemError'>, 'BaseException': <type 'exceptions.BaseException'>, 'pow': <built-in function pow>, 'RuntimeError': <type 'exceptions.RuntimeError'>, 'float': <type 'float'>, 'MemoryError': <type 'exceptions.MemoryError'>, 'StopIteration': <type 'exceptions.StopIteration'>, 'globals': <built-in function globals>, 'divmod': <built-in function divmod>, 'enumerate': <type 'enumerate'>, 'apply': <built-in function apply>, 'LookupError': <type 'exceptions.LookupError'>, 'open': <built-in function open>, 'quit': Use quit() or Ctrl-D (i.e. EOF) to exit, 'basestring': <type 'basestring'>, 'UnicodeError': <type 'exceptions.UnicodeError'>, 'zip': <built-in function zip>, 'hex': <built-in function hex>, 'long': <type 'long'>, 'next': <built-in function next>, 'ImportError': <type 'exceptions.ImportError'>, 'chr': <built-in function chr>, 'xrange': <type 'xrange'>, 'type': <type 'type'>, '__doc__': "Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil' object; Ellipsis represents `...' in slices.", 'Exception': <type 'exceptions.Exception'>, 'tuple': <type 'tuple'>, 'UnicodeTranslateError': <type 'exceptions.UnicodeTranslateError'>, 'reversed': <type 'reversed'>, 'UnicodeEncodeError': <type 'exceptions.UnicodeEncodeError'>, 'IOError': <type 'exceptions.IOError'>, 'hasattr': <built-in function hasattr>, 'delattr': <built-in function delattr>, 'setattr': <built-in function setattr>, 'raw_input': <built-in function raw_input>, 'SyntaxWarning': <type 'exceptions.SyntaxWarning'>, 'compile': <built-in function compile>, 'ArithmeticError': <type 'exceptions.ArithmeticError'>, 'str': <type 'str'>, 'property': <type 'property'>, 'GeneratorExit': <type 'exceptions.GeneratorExit'>, 'int': <type 'int'>, '__import__': <built-in function __import__>, 'KeyError': <type 'exceptions.KeyError'>, 'coerce': <built-in function coerce>, 'PendingDeprecationWarning': <type 'exceptions.PendingDeprecationWarning'>, 'file': <type 'file'>, 'EnvironmentError': <type 'exceptions.EnvironmentError'>, 'unichr': <built-in function unichr>, 'id': <built-in function id>, 'OSError': <type 'exceptions.OSError'>, 'DeprecationWarning': <type 'exceptions.DeprecationWarning'>, 'min': <built-in function min>, 'UnicodeWarning': <type 'exceptions.UnicodeWarning'>, 'execfile': <built-in function execfile>, 'any': <built-in function any>, 'complex': <type 'complex'>, 'bool': <type 'bool'>, 'ValueError': <type 'exceptions.ValueError'>, 'NotImplemented': NotImplemented, 'map': <built-in function map>, 'buffer': <type 'buffer'>, 'max': <built-in function max>, 'object': <type 'object'>, 'TabError': <type 'exceptions.TabError'>, 'callable': <built-in function callable>, 'ZeroDivisionError': <type 'exceptions.ZeroDivisionError'>, 'eval': <built-in function eval>, '__debug__': True, 'IndentationError': <type 'exceptions.IndentationError'>, 'AssertionError': <class '_pytest.assertion.reinterpret.AssertionError'>, 'classmethod': <type 'classmethod'>, 'UnboundLocalError': <type 'exceptions.UnboundLocalError'>, 'NotImplementedError': <type 'exceptions.NotImplementedError'>, 'AttributeError': <type 'exceptions.AttributeError'>, 'OverflowError': <type 'exceptions.OverflowError'>}
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __builtins__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/test_suite.py
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __file__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'collections.Counter'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: Counter
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'test_suite.TestDispatcher'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: TestDispatcher
        finish pytest_pycollect_makeitem --> <UnitTestCase 'TestDispatcher'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: /Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/tests/__pycache__/test_suite.cpython-27-PYTEST.pyc
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __cached__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: test_suite
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __name__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '_pytest.assertion.rewrite' from '/Users/Jacob/anaconda/lib/python2.7/site-packages/_pytest/assertion/rewrite.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: @pytest_ar
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module '__builtin__' (built-in)>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: @py_builtins
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'codingChallenge.unique_words.UniqueWordsCalculator'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: UniqueWordsCalculator
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'codingChallenge.constants' from '/Users/Jacob/Documents/Projects/DataInsight/codingChallenge/codingChallenge/constants.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: constants
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'test_suite.TestMedianCount'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: TestMedianCount
        finish pytest_pycollect_makeitem --> <UnitTestCase 'TestMedianCount'> [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __doc__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: None
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __package__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <class 'codingChallenge.median_unique.MedianCalculator'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: MedianCalculator
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <module 'os' from '/Users/Jacob/anaconda/lib/python2.7/os.pyc'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: os
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <type 'operator.itemgetter'>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: itemgetter
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__setattr__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __setattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <built-in method __new__ of type object at 0x10017d9a0>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __new__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__getattribute__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __getattribute__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__delattr__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __delattr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__repr__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __repr__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <member '__dict__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __dict__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__init__' of 'module' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __init__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce_ex__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __reduce_ex__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__reduce__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __reduce__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__str__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __str__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__format__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __format__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <attribute '__class__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __class__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__subclasshook__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __subclasshook__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <slot wrapper '__hash__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __hash__
        finish pytest_pycollect_makeitem --> None [hook]
        pytest_pycollect_makeitem [hook]
            obj: <method '__sizeof__' of 'object' objects>
            collector: <Module 'codingChallenge/tests/test_suite.py'>
            name: __sizeof__
        finish pytest_pycollect_makeitem --> None [hook]
      finish pytest_make_collect_report --> <CollectReport 'codingChallenge/tests/test_suite.py' lenresult=3 outcome='passed'> [hook]
    genitems <UnitTestCase 'TestUniqueWords'> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase 'TestUniqueWords'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase 'TestUniqueWords'>
      finish pytest_make_collect_report --> <CollectReport 'codingChallenge/tests/test_suite.py::TestUniqueWords' lenresult=1 outcome='passed'> [hook]
    genitems <TestCaseFunction 'test_insight_github_unique_all_tweets'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'codingChallenge/tests/test_suite.py::TestUniqueWords' lenresult=1 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase 'TestMedianCount'> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase 'TestMedianCount'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase 'TestMedianCount'>
      finish pytest_make_collect_report --> <CollectReport 'codingChallenge/tests/test_suite.py::TestMedianCount' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction 'test_one_tweet'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_one_tweet'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_three_cumulative_tweets'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_three_cumulative_tweets'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_two_cumulative_tweets'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_two_cumulative_tweets'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'codingChallenge/tests/test_suite.py::TestMedianCount' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
    genitems <UnitTestCase 'TestDispatcher'> [collection]
      pytest_collectstart [hook]
          collector: <UnitTestCase 'TestDispatcher'>
      finish pytest_collectstart --> [] [hook]
      pytest_make_collect_report [hook]
          collector: <UnitTestCase 'TestDispatcher'>
      finish pytest_make_collect_report --> <CollectReport 'codingChallenge/tests/test_suite.py::TestDispatcher' lenresult=3 outcome='passed'> [hook]
    genitems <TestCaseFunction 'test_ft1_file_contents_equality'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_ft1_file_contents_equality'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_ft2_file_contents_equality'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_ft2_file_contents_equality'>
      finish pytest_itemcollected --> [] [hook]
    genitems <TestCaseFunction 'test_num_files'> [collection]
      pytest_itemcollected [hook]
          item: <TestCaseFunction 'test_num_files'>
      finish pytest_itemcollected --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'codingChallenge/tests/test_suite.py::TestDispatcher' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collectreport [hook]
          report: <CollectReport 'codingChallenge/tests/test_suite.py' lenresult=3 outcome='passed'>
      finish pytest_collectreport --> [] [hook]
      pytest_collection_modifyitems [hook]
          items: [<TestCaseFunction 'test_insight_github_unique_all_tweets'>, <TestCaseFunction 'test_one_tweet'>, <TestCaseFunction 'test_three_cumulative_tweets'>, <TestCaseFunction 'test_two_cumulative_tweets'>, <TestCaseFunction 'test_ft1_file_contents_equality'>, <TestCaseFunction 'test_ft2_file_contents_equality'>, <TestCaseFunction 'test_num_files'>]
          session: <Session 'codingChallenge'>
          config: <_pytest.config.Config object at 0x1005dfb10>
      finish pytest_collection_modifyitems --> [] [hook]
      pytest_collection_finish [hook]
          session: <Session 'codingChallenge'>
      finish pytest_collection_finish --> [] [hook]
    finish pytest_collection --> [<TestCaseFunction 'test_insight_github_unique_all_tweets'>, <TestCaseFunction 'test_one_tweet'>, <TestCaseFunction 'test_three_cumulative_tweets'>, <TestCaseFunction 'test_two_cumulative_tweets'>, <TestCaseFunction 'test_ft1_file_contents_equality'>, <TestCaseFunction 'test_ft2_file_contents_equality'>, <TestCaseFunction 'test_num_files'>] [hook]
    pytest_runtestloop [hook]
        session: <Session 'codingChallenge'>
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
          nextitem: <TestCaseFunction 'test_one_tweet'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 75, 'TestUniqueWords.test_insight_github_unique_all_tweets')
            nodeid: codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
            nextitem: <TestCaseFunction 'test_one_tweet'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_insight_github_unique_all_tweets'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestUniqueWords::test_insight_github_unique_all_tweets' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_one_tweet'>
          nextitem: <TestCaseFunction 'test_three_cumulative_tweets'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 88, 'TestMedianCount.test_one_tweet')
            nodeid: codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_one_tweet'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_one_tweet'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_one_tweet'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_one_tweet'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_one_tweet'>
            nextitem: <TestCaseFunction 'test_three_cumulative_tweets'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_one_tweet'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_one_tweet' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_three_cumulative_tweets'>
          nextitem: <TestCaseFunction 'test_two_cumulative_tweets'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 98, 'TestMedianCount.test_three_cumulative_tweets')
            nodeid: codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
            nextitem: <TestCaseFunction 'test_two_cumulative_tweets'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_three_cumulative_tweets'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_three_cumulative_tweets' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_two_cumulative_tweets'>
          nextitem: <TestCaseFunction 'test_ft1_file_contents_equality'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 93, 'TestMedianCount.test_two_cumulative_tweets')
            nodeid: codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
            nextitem: <TestCaseFunction 'test_ft1_file_contents_equality'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_two_cumulative_tweets'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestMedianCount::test_two_cumulative_tweets' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_ft1_file_contents_equality'>
          nextitem: <TestCaseFunction 'test_ft2_file_contents_equality'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 125, 'TestDispatcher.test_ft1_file_contents_equality')
            nodeid: codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='call' outcome='failed'>
            node: <TestCaseFunction 'test_ft1_file_contents_equality'>
            call: <CallInfo when='call' exception: assert False>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
            nextitem: <TestCaseFunction 'test_ft2_file_contents_equality'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft1_file_contents_equality'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft1_file_contents_equality' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_ft2_file_contents_equality'>
          nextitem: <TestCaseFunction 'test_num_files'>
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 137, 'TestDispatcher.test_ft2_file_contents_equality')
            nodeid: codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='call' outcome='failed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='call' outcome='failed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='call' outcome='failed'>
          finish pytest_report_teststatus --> ('failed', 'F', 'FAILED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_exception_interact [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='call' outcome='failed'>
            node: <TestCaseFunction 'test_ft2_file_contents_equality'>
            call: <CallInfo when='call' exception: assert False>
        finish pytest_exception_interact --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
            nextitem: <TestCaseFunction 'test_num_files'>
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_ft2_file_contents_equality'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_ft2_file_contents_equality' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
      pytest_runtest_protocol [hook]
          item: <TestCaseFunction 'test_num_files'>
          nextitem: None
        pytest_runtest_logstart [hook]
            location: ('codingChallenge/tests/test_suite.py', 121, 'TestDispatcher.test_num_files')
            nodeid: codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files
        finish pytest_runtest_logstart --> [] [hook]
        pytest_runtest_setup [hook]
            item: <TestCaseFunction 'test_num_files'>
        finish pytest_runtest_setup --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_num_files'>
            call: <CallInfo when='setup' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='setup' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='setup' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='setup' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_call [hook]
            item: <TestCaseFunction 'test_num_files'>
        finish pytest_runtest_call --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_num_files'>
            call: <CallInfo when='call' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='call' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='call' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='call' outcome='passed'>
          finish pytest_report_teststatus --> ('passed', '.', 'PASSED') [hook]
        finish pytest_runtest_logreport --> [] [hook]
        pytest_runtest_teardown [hook]
            item: <TestCaseFunction 'test_num_files'>
            nextitem: None
        finish pytest_runtest_teardown --> [] [hook]
        pytest_runtest_makereport [hook]
            item: <TestCaseFunction 'test_num_files'>
            call: <CallInfo when='teardown' result: []>
        finish pytest_runtest_makereport --> <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='teardown' outcome='passed'> [hook]
        pytest_runtest_logreport [hook]
            report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='teardown' outcome='passed'>
          pytest_report_teststatus [hook]
              report: <TestReport 'codingChallenge/tests/test_suite.py::TestDispatcher::test_num_files' when='teardown' outcome='passed'>
          finish pytest_report_teststatus --> ('', '', '') [hook]
        finish pytest_runtest_logreport --> [] [hook]
      finish pytest_runtest_protocol --> True [hook]
    finish pytest_runtestloop --> True [hook]
    pytest_sessionfinish [hook]
        session: <Session 'codingChallenge'>
        exitstatus: 1
      pytest_terminal_summary [hook]
          terminalreporter: <_pytest.terminal.TerminalReporter instance at 0x103e8de18>
      finish pytest_terminal_summary --> [] [hook]
    finish pytest_sessionfinish --> [] [hook]
    pytest_unconfigure [hook]
        config: <_pytest.config.Config object at 0x1005dfb10>
    finish [config:tmpdir]
